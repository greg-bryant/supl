x = done
* = to do

x get c working
x get make working
x get git working
x get c writing files
x get lex working
x get yacc working
x make a supl file generator
* write gallery app as a python-javascript-css app sequence generated by supl








------------------
NOTES:

Good things:

1) an early quote/snippet in an .nt 'x' makes quite a lot of sense,
   because 'x' will next appear as a .p 'x', which can then have many more refined
   definitions. This is brilliant for unfolding.

MAYBE needed things:

1) A way to rewrite X (a,b) as Y (c,d). This would bring it close to
   a context sensitive grammar rewrite system like grogix.

2) And a way to, still, make gestalt changes relative to a particular
aspect such as this one. In the meantime, I'll use backwards-inserted
stubs, and see how far it goes. 

In some ways, it makes it better not to be able to insert / delete 
nodes and quotes and files.

3) The pizazz of a javascript IDE that could let you highlight deductive
   paths and holistic steps alternatively.

4) and I don't really see a downward deductive tree to match the upward
   definition fulfillment. That is, I should be able to define X and then
   use X everywhere. Since everything is a definition, nothing is a use.
   That's not the point here, but it would be interesting to combine that
   m4-ish quality with these stepwise and multiple file qualities.

------------------
